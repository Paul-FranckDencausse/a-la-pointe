#include <Arduino.h>

// Pin definitions
#define SYSTEM_LED    9
#define ULN_BUZZER    10
#define ULN_LED1      11
#define ULN_LED2      18
#define ULN_LED3      19
#define ULN_LED4      20
#define ULN_LED5      21

#define USER_SW       25

#define TARGET1_STATE 28
#define TARGET2_STATE 31
#define TARGET3_STATE 34
#define TARGET4_STATE 35
#define TARGET5_STATE 38

#define TARGET1       29
#define TARGET2       32
#define TARGET3       33
#define TARGET4       36
#define TARGET5       37

// Nombre de cibles
#define TARGET_COUNT 5

// Tableau des LEDs des cibles
int targetPins[TARGET_COUNT] = {ULN_LED1, ULN_LED2, ULN_LED3, ULN_LED4, ULN_LED5};
// Tableau des états de cibles
int targetStates[TARGET_COUNT] = {TARGET1_STATE, TARGET2_STATE, TARGET3_STATE, TARGET4_STATE, TARGET5_STATE};

unsigned long activationTime = 0;
unsigned long reactionTime = 0;

int currentTarget = -1;
int hits = 0;  // nombre de cibles touchées

void initPins() {
  pinMode(SYSTEM_LED, OUTPUT);
  pinMode(ULN_BUZZER, OUTPUT);
  for (int i = 0; i < TARGET_COUNT; i++) {
    pinMode(targetPins[i], OUTPUT);
    pinMode(targetStates[i], INPUT);
  }
  pinMode(USER_SW, INPUT_PULLUP);
}

void setup() {
  Serial.begin(115200);
  initPins();
  randomSeed(analogRead(0));
  Serial.println("ESP32-S3 Target system initialized.");
}

void loop() {
  if (hits >= 5) {
    Serial.println("Session terminée ✅");
    while (1); // Stopper le programme (ou reset hits)
  }

  if (currentTarget == -1) {
    activateRandomTarget();
  }

  // Vérifie si la cible active est touchée
  if (currentTarget != -1 && digitalRead(targetStates[currentTarget]) == HIGH) {
    reactionTime = millis() - activationTime;
    hits++;

    Serial.print("Target ");
    Serial.print(currentTarget + 1);
    Serial.print(" HIT! Reaction time: ");
    Serial.print(reactionTime);
    Serial.println(" ms");

    hitFeedback();
    deactivateTarget(currentTarget);
    currentTarget = -1;

    delay(1000); // petite pause avant la prochaine cible
  }
}

void activateRandomTarget() {
  currentTarget = random(0, TARGET_COUNT);
  digitalWrite(targetPins[currentTarget], HIGH);
  activationTime = millis();

  Serial.print("New target: ");
  Serial.println(currentTarget + 1);
}

void deactivateTarget(int targetIndex) {
  digitalWrite(targetPins[targetIndex], LOW);
}

void hitFeedback() {
  digitalWrite(ULN_BUZZER, HIGH);
  digitalWrite(SYSTEM_LED, HIGH);
  delay(200);
  digitalWrite(ULN_BUZZER, LOW);
  digitalWrite(SYSTEM_LED, LOW);
}
